#!/bin/bash
# wordstar, version 0.4
# copyright 2024 Erik Ben Heckman <erik@heckman.ca>
# shared under the terms of the MIT license


# wordstar: Launch WordStar in an emulated DOS environment on MacOS


set -euo pipefail


ALLOW_DYNAMIC_MOUNTING=true

# don't use '~' in these paths as it won't necessarily be escaped
DOCUMENT_ROOT_PATH="$HOME/Documents/WordStar/"
DOS_ROOT_PATH="$HOME/Applications/WordStar/DOS root/"
DOSBOX_CONFIG_PATH="$HOME/Applications/WordStar/dosbox-x.conf"
DOSBOX_X_PATH="/Applications/dosbox-x.app/Contents/MacOS/dosbox-x"

# it doesn't matter what drive letters are used here,
# as long as they're not C: or Z:
# and that they are not the same as each other.
DOCUMENT_DRIVE="D:" # this is also used for dynamic mount

# these settings are relative the config file provided
# at /WS/DOSBox-X/dosbox-x.conf
# in Robert J. Sawyer's WordStar 7 Archive
# downloaded from https://sfwriter.com/ws7.htm
DOSBOX_ARGUMENTS=(
	-conf "$DOSBOX_CONFIG_PATH"
	-fastlaunch
	-noautoexec
	-set 'sdl fullscreen=false'
	-set 'ttf font=dejavusansmono'
	-set 'ttf fontbold=dejavusansmono-bold'
	-set 'ttf fontital=dejavusansmono-oblique'
	-set 'ttf fontboit=dejavusansmono-boldoblique'
	-set 'ttf ptsize=30'
	-set 'ttf lins=30'
	-set 'ttf cols=96'
	-c "@echo off"
	-c "mount -q C: \"${DOS_ROOT_PATH%/}\""
)

# default options, can be overridden by command line options
# change them to alter default behaviour
OPT_MODE=WS
OPT_FULLSCREEN=false
OPT_CREATE_PATH=false
OPT_DYNAMIC_MOUNT=false

# don't change the following options
DEBUG_DESTINATION=/dev/null



help(){
	echo "USAGE: wordstar [OPTIONS] [--] [DOCUMENT]

    Launches WordStar in an emulated DOS environment.

    OPTIONS THAT IGNORE ALL OTHER OPTIONS:
        -V, -version  Print version and copyright message and exit.
        -h, -help     Print this helpful message and exit.

    OPTIONS THAT SET WHAT TO LAUNCH IN THE EMULATOR:
        -4, -WS4          Launch WordStar with \"Help Level 4\" (default).
        -3, -WS3          Launch WordStar with \"Help Level 3\".
        -2, -WS2          Launch WordStar with \"Help Level 2\".
        -b, -base         Launch WordStar with an unmodified out-of-the-box
                          version of WordStar.
        -s, -sawyer       Launch WordStar with Robert J. Sawyer's preferred
                          layout and extensive cutomizations.
            -dos, -shell  Don't launch WordStar, just launch DOSBox-X.
                          This is useful for testing etc.

    OPTIONS THAT TWEAK BEHAVIOUR:
        -v, -verbose     Be verbose: output dosbox-x debug messages
        -f, -fullscreen  Start the emulation in full-screen mode
        -w, -window      Start the emulation in windowed mode (default)
        -p, -path        If creating a new document, create its parent
                         directories as required.

    POTENTIALLY DANGEROUS OPTIONS:
        -d, -documents   restrict mounting directories to ${DOCUMENT_ROOT_PATH%/}
		                 only files under this directory will be accessible
        -a, -any         allow opening document in any directory
                         i.e. don't restrict documents to ${DOCUMENT_ROOT_PATH%/}/
                         this will expose the directory
                         to DOSBox-X and WordStar

    Each option must be specified in its own argument.
    The long options can also be specified with two dashes.
    If multile launch-options are specified only the last one will be used.

    The dynamic mounting option is potentially dangerous, as it allows access
    by the DOSBox-X and WordStar to arbitrary directories.

    -- is required if DOCUMENT begins with a -.

    DOCUMENT is relative to the ${DOCUMENT_DRIVE%:}: drive mount, unless it begins with a /
    and points to a path that resides within the ${DOCUMENT_DRIVE%:}: drive mount.

    If DOCUMENT doesn't exist, a new document will be opened in WordStar,
    with the document's name appended with .WS if it doesn't already have
    that extension.

"
}



main(){
	while [[ "${1:0:1}" == '-' ]]
	do
		case "$1" in
		-h|-help|--help) help; exit;; # ignore other options
		-V|-version|--version) version; exit;;  # ignore other options
		-dos|--dos|-shell|--shell) shift;    OPT_MODE=DOS;;
		-4|-WS4|--WS4) shift;                OPT_MODE=WS;;
		-3|-WS3|--WS3) shift;                OPT_MODE=WS3;;
		-2|-WS2|--WS2) shift;                OPT_MODE=WS2;;
		-s|-sawyer|--sawyer) shift;          OPT_MODE=SAWYER;;
		-b|-base|--base) shift;              OPT_MODE=PRISTINE;;
		-v|-verbose|--verbose) shift;        DEBUG_DESTINATION=/dev/stderr;;
		-w|-window|--window) shift;          OPT_FULLSCREEN=false;;
		-f|-fullscreen|--fullscreen) shift;  OPT_FULLSCREEN=true;;
		-p|-path|--path) shift;              OPT_CREATE_PATH=true;;
		-d|-documents|--documents) shift;    OPT_DYNAMIC_MOUNT=false;;
		-a|-any*|--any*) shift
			if $ALLOW_DYNAMIC_MOUNTING
			then
				OPT_DYNAMIC_MOUNT=true
			else
				die "Dynamic mounting not enabled."
			fi
			;;
		--) shift; break;;
		-*) die "Unknown option: '$1', use -h for help.";;
		esac
	done

	$OPT_FULLSCREEN && DOSBOX_ARGUMENTS+=(-fullscreen)

	# determine mount_path, ws_document, and mount_drive
	local  mount_path ws_document mount_drive
	if $OPT_DYNAMIC_MOUNT
	then
		if [[ -d "$1" ]]
		then
			mount_path="${1%/}"
			ws_document=""
		else
			ws_document="$(
				basename "$(
					find_ws_document "$1"
				)" |
				reverse_slashes
			)"
			mount_path="$(dirname "$1")"
		fi
	else
		mount_path="${DOCUMENT_ROOT_PATH%/}"
		ws_document="$(
			strip_doc_dir "$(
				find_ws_document "$(
					prepend_doc_dir "$1"
				)"
			)" |
			reverse_slashes
		)"
	fi

	# make sure mount_path exists
	[[ -d "$mount_path" ]] || die \
		"Directory '$mount_path' doesn't exist, use -p option to create it."

	# add commands: mount the document drive and make it the working directory
	DOSBOX_ARGUMENTS+=(
		-c "mount -q ${DOCUMENT_DRIVE} \"${mount_path}\""
		-c "${DOCUMENT_DRIVE}"
	)

	if [[ "$OPT_MODE" == "DOS" ]]
	then
		# add commands for debugging purposes
		DOSBOX_ARGUMENTS+=(
			-c "set WS_DOCUMENT=${ws_document}"
			-c "mount ${DOCUMENT_DRIVE}"
			-c "echo WS_DOCUMENT is set to %WS_DOCUMENT%"
		)
	else
		# add commands: run WordStar then exit
		DOSBOX_ARGUMENTS+=(
			-c "$OPT_MODE ${ws_document}"
			-c "EXIT"
		)
	fi

	"$DOSBOX_X_PATH" "${DOSBOX_ARGUMENTS[@]}" 2>$DEBUG_DESTINATION
}

strip_doc_dir(){ local path="$1"
	echo "${path#"${DOCUMENT_ROOT_PATH%/}/"}"
}

prepend_doc_dir(){ local path; path="$(strip_doc_dir "$1")"
	echo "${DOCUMENT_ROOT_PATH%/}/${path}"
}

reverse_slashes(){
	sed 's|//*|\\|g'
}

find_ws_document(){ local path="$1"
	# check if the file exists, or if it exists when appending .WS extension
	# it's done the hard way in case the filesystem is case sensitive
	for ws_doc_path in "$path" "$path".[Ww][Ss]
	do
		if [[ -e "$ws_doc_path" ]]; then
			echo "$ws_doc_path"
			return
		fi
	done
	dirname "$path" >&2
	$OPT_CREATE_PATH && mkdir -p "$(dirname "$path")"
	# new document with WS extension
	echo "${path%.[Ww][Ss]}.WS"
}

version(){
	/usr/bin/awk '/^#!/{next}/^#/{sub("^# *","");print;next}{exit}' "$0"
}

die(){
	echo "$1">&2
	exit 77
	# exit doesn't work if we're in a subshell
	# kill $$ 2>/dev/null
}

main "$@"

